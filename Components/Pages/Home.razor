@page "/home"
@inject DatabaseService DatabaseService
@inject NavigationManager NavigationManager
@using UsgphPlanning
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]


<div class="container py-5">
    <div class="row mb-4 align-items-center">
        <div class="col">
            <h1 class="display-4 fw-bold text-primary">
                <i class="bi bi-geo-alt-fill me-2"></i>Gestion des Lieux
            </h1>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary btn-lg shadow" @onclick="NavigateToCreate">
                <i class="bi bi-plus-circle-fill me-2"></i> Nouveau Lieu
            </button>
        </div>
    </div>

    <div class="card shadow border-0 rounded-3">
        <div class="card-body p-0">
            @if (lieux == null)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                    <p class="mt-3 text-muted">Chargement des données...</p>
                </div>
            }
            else if (!lieux.Any())
            {
                <div class="text-center py-5">
                    <i class="bi bi-emoji-frown display-1 text-muted"></i>
                    <h3 class="mt-3">Aucun lieu disponible</h3>
                    <p class="text-muted">Commencez par ajouter votre premier lieu</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4">ID</th>
                                <th>Nom</th>
                                <th class="text-end pe-4">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var lieu in lieux)
                            {
                                <tr>
                                    <td class="ps-4 fw-bold text-muted">@lieu.Id</td>
                                    <td class="fw-medium">@lieu.Nom</td>
                                    <td class="text-end pe-4">
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-outline-primary" @onclick="() => NavigateToEdit((int)lieu.Id)" data-bs-toggle="tooltip" title="Éditer">
                                                <i class="bi bi-pencil-fill"></i>
                                            </button>
                                            <button class="btn btn-outline-danger" @onclick="() => DeleteLieu((int)lieu.Id)" data-bs-toggle="tooltip" title="Supprimer">
                                                <i class="bi bi-trash-fill"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@if (showDeleteConfirmation)
{
    <div class="modal-backdrop fade show"></div>
    <div class="modal fade show" style="display: block; z-index: 1050;" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>Confirmation de suppression
                    </h5>
                    <button type="button" class="btn-close btn-close-white" @onclick="CancelDelete" aria-label="Fermer"></button>
                </div>
                <div class="modal-body p-4">
                    <p class="mb-0">Êtes-vous sûr de vouloir supprimer ce lieu ? Cette action est irréversible.</p>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-light" @onclick="CancelDelete">
                        <i class="bi bi-x-circle me-2"></i>Annuler
                    </button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">
                        <i class="bi bi-trash-fill me-2"></i>Supprimer définitivement
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Lieu> lieux = new();
    private bool showDeleteConfirmation = false;
    private int lieuIdToDelete;

    protected override async Task OnInitializedAsync()
    {
        lieux = await DatabaseService.GetLieux();
    }

    private void NavigateToCreate()
    {
        NavigationManager.NavigateTo("/lieu/create");
    }

    private void NavigateToEdit(int id)
    {
        NavigationManager.NavigateTo($"/lieu/edit/{id}");
    }

    private void DeleteLieu(int id)
    {
        lieuIdToDelete = id;
        showDeleteConfirmation = true;
        StateHasChanged(); // Forcer la mise à jour de l'UI
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
        StateHasChanged(); // Forcer la mise à jour de l'UI
    }

    private async Task ConfirmDelete()
    {
        try
        {
            await DatabaseService.DeleteLieu(lieuIdToDelete);
            showDeleteConfirmation = false;
            // Rafraîchir la liste après suppression
            lieux = await DatabaseService.GetLieux();
        }
        catch (Exception ex)
        {
            // Gérer l'erreur ici
            Console.WriteLine($"Erreur lors de la suppression: {ex.Message}");
        }
        finally
        {
            StateHasChanged(); // Assurer que l'UI est mise à jour
        }
    }
}